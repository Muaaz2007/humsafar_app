"use client"

import { useState, useEffect } from "react"
import { useRouter } from "next/navigation"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Copy, Home, Shield, Building, Truck, Zap, AlertTriangle, Download, Phone, User } from "lucide-react"
import Link from "next/link"
import ImpactEstimation from "@/components/impact-estimation"

interface ComplaintResult {
  status: string
  department: string
  reference_id: string
  category: string
  summary: string
  urgency: "High" | "Medium" | "Low"
  estimated_resolution: string
  contact_number: string
}

const departmentIcons = {
  Infrastructure: Building,
  Transport: Truck,
  Safety: Shield,
  Utilities: Zap,
  General: AlertTriangle,
  Education: Building,
  Health: Shield,
  Welfare: User,
}

const departmentColors = {
  Infrastructure: "bg-orange-100 text-orange-700",
  Transport: "bg-blue-100 text-blue-700",
  Safety: "bg-red-100 text-red-700",
  Utilities: "bg-green-100 text-green-700",
  General: "bg-purple-100 text-purple-700",
  Education: "bg-indigo-100 text-indigo-700",
  Health: "bg-pink-100 text-pink-700",
  Welfare: "bg-teal-100 text-teal-700",
}

const urgencyColors = {
  High: "bg-red-100 text-red-800 border-red-200",
  Medium: "bg-yellow-100 text-yellow-800 border-yellow-200",
  Low: "bg-green-100 text-green-800 border-green-200",
}

export default function ResultScreen() {
  const [result, setResult] = useState<ComplaintResult | null>(null)
  const [copied, setCopied] = useState(false)
  const [downloadingReport, setDownloadingReport] = useState(false)
  const router = useRouter()

  useEffect(() => {
    const storedResult = sessionStorage.getItem("complaintResult")
    if (storedResult) {
      setResult(JSON.parse(storedResult))
    } else {
      router.push("/complaint")
    }
  }, [router])

  const copyReferenceId = () => {
    if (result?.reference_id) {
      navigator.clipboard.writeText(result.reference_id)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    }
  }

  const downloadReport = async () => {
    if (!result) return

    setDownloadingReport(true)

    try {
      // Create report content
      const reportContent = `
HUMSAFAR - COMPLAINT SUBMISSION REPORT
=====================================

Submission Date: ${new Date().toLocaleDateString("en-IN", {
        year: "numeric",
        month: "long",
        day: "numeric",
        hour: "2-digit",
        minute: "2-digit",
      })}

COMPLAINT DETAILS:
-----------------
Reference ID: ${result.reference_id}
Department: ${result.department}
Category: ${result.category}
Priority Level: ${result.urgency}
Expected Resolution: ${result.estimated_resolution}

AI ANALYSIS SUMMARY:
-------------------
${result.summary}

CONTACT INFORMATION:
-------------------
Department Contact: ${result.contact_number}
Customer Care Hours: Monday to Friday, 9:00 AM - 6:00 PM

NEXT STEPS:
----------
• Department will review your complaint within 24 hours
• You'll receive updates via SMS/Email if provided
• Keep this reference number for future inquiries
• Contact the department directly using the number above if needed

IMPORTANT NOTES:
---------------
• This report serves as proof of your complaint submission
• Save this document for your records
• If no response is received within the estimated timeframe, 
  you can escalate using this reference number
• For urgent matters, contact the department directly

Generated by HUMSAFAR AI-Powered Complaint Management System
Visit us at: https://humsafar.gov.in
Support: support@humsafar.gov.in

This is an automatically generated report powered by AI analysis.
      `.trim()

      // Create and download the file
      const blob = new Blob([reportContent], { type: "text/plain" })
      const url = window.URL.createObjectURL(blob)
      const link = document.createElement("a")
      link.href = url
      link.download = `HUMSAFAR_Complaint_${result.reference_id}_${new Date().toISOString().split("T")[0]}.txt`
      document.body.appendChild(link)
      link.click()
      document.body.removeChild(link)
      window.URL.revokeObjectURL(url)
    } catch (error) {
      console.error("Error downloading report:", error)
      alert("Error downloading report. Please try again.")
    } finally {
      setDownloadingReport(false)
    }
  }

  if (!result) {
    return (
      <div className="min-h-screen bg-gray-100 flex items-center justify-center">
        <div className="w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin" />
      </div>
    )
  }

  const DepartmentIcon = departmentIcons[result.department as keyof typeof departmentIcons] || AlertTriangle
  const departmentColor =
    departmentColors[result.department as keyof typeof departmentColors] || "bg-gray-100 text-gray-700"

  return (
    <div className="min-h-screen bg-gray-100 p-4">
      <div className="max-w-md mx-auto pt-8">
        {/* Success Animation */}
        <div className="text-center mb-8">
          <div className="w-24 h-24 mx-auto bg-white dark:bg-gray-800 rounded-3xl flex items-center justify-center mb-6 shadow-lg border border-gray-200 dark:border-gray-700 relative overflow-hidden">
            <img src="/humsafar-logo.png" alt="HUMSAFAR Logo" className="w-full h-full object-cover rounded-3xl" />
            <div className="absolute inset-0 bg-gradient-to-br from-green-500/20 to-emerald-600/20 rounded-3xl animate-pulse" />
          </div>
          <h1 className="text-3xl font-bold text-gray-900 mb-2">AI Analysis Complete!</h1>
          <p className="text-gray-600">Your complaint has been analyzed and categorized by AI</p>
        </div>

        {/* Result card */}
        <Card className="shadow-lg border-0 bg-white rounded-3xl mb-6 overflow-hidden">
          <CardHeader className="text-center pb-4 bg-gradient-to-br from-blue-50 to-purple-50">
            <div
              className={`w-16 h-16 mx-auto ${departmentColor} rounded-2xl flex items-center justify-center mb-4 shadow-sm`}
            >
              <DepartmentIcon className="w-8 h-8" />
            </div>
            <CardTitle className="text-xl text-gray-900 font-bold">Routed to</CardTitle>
            <p className="text-lg font-semibold text-gray-700">{result.department} Department</p>
          </CardHeader>

          <CardContent className="p-6 space-y-6">
            {/* Reference ID */}
            <div className="bg-gradient-to-r from-gray-50 to-blue-50 rounded-2xl p-4 border border-gray-200">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600 mb-1 font-medium">Reference Number</p>
                  <p className="font-mono text-lg font-bold text-gray-900">{result.reference_id}</p>
                </div>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={copyReferenceId}
                  className="bg-white border-gray-200 text-gray-700 hover:bg-gray-50 rounded-xl"
                >
                  <Copy className="w-4 h-4" />
                  {copied ? "Copied!" : "Copy"}
                </Button>
              </div>
            </div>

            {/* Department Contact */}
            <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-2xl p-4 border border-green-200">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-gray-600 mb-1 font-medium">Department Contact</p>
                  <p className="font-semibold text-gray-900 flex items-center gap-2">
                    <Phone className="w-4 h-4 text-green-600" />
                    {result.contact_number}
                  </p>
                </div>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => window.open(`tel:${result.contact_number}`)}
                  className="bg-white border-green-200 text-green-700 hover:bg-green-50 rounded-xl"
                >
                  Call Now
                </Button>
              </div>
              <p className="text-xs text-gray-500 mt-2">Mon-Fri: 9:00 AM - 6:00 PM</p>
            </div>

            {/* AI Analysis Results */}
            <div className="grid grid-cols-1 gap-4">
              <div className="flex justify-between items-center p-4 bg-blue-50 rounded-2xl border border-blue-100">
                <span className="text-gray-700 font-medium">AI Category</span>
                <Badge className="bg-blue-100 text-blue-800 border-blue-200 rounded-xl px-3 py-1">
                  {result.category}
                </Badge>
              </div>

              <div className="flex justify-between items-center p-4 bg-yellow-50 rounded-2xl border border-yellow-100">
                <span className="text-gray-700 font-medium">AI Priority Level</span>
                <Badge className={`${urgencyColors[result.urgency]} rounded-xl px-3 py-1 border`}>
                  {result.urgency}
                </Badge>
              </div>

              <div className="flex justify-between items-start p-4 bg-green-50 rounded-2xl border border-green-100">
                <span className="text-gray-700 font-medium">Expected Resolution</span>
                <span className="text-gray-900 font-semibold text-right">{result.estimated_resolution}</span>
              </div>
            </div>

            {/* AI Summary */}
            <div className="bg-gradient-to-br from-purple-50 to-indigo-50 rounded-2xl p-4 border border-purple-100">
              <h3 className="font-bold text-gray-900 mb-3 flex items-center gap-2">
                <div className="w-6 h-6 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-lg flex items-center justify-center">
                  <span className="text-white text-xs font-bold">AI</span>
                </div>
                AI Analysis Summary
              </h3>
              <p className="text-gray-700 text-sm leading-relaxed">{result.summary}</p>
            </div>

            {/* Impact Estimation */}
            <ImpactEstimation complaint={result.summary} location="User Location" department={result.department} />

            {/* Next Steps */}
            <div className="bg-gradient-to-br from-emerald-50 to-green-50 rounded-2xl p-4 border border-emerald-100">
              <h3 className="font-bold text-gray-900 mb-3">What Happens Next?</h3>
              <ul className="text-sm text-gray-700 space-y-2">
                <li className="flex items-start gap-3">
                  <div className="w-2 h-2 bg-emerald-500 rounded-full mt-2 flex-shrink-0" />
                  <span>AI has automatically routed your complaint to the correct department</span>
                </li>
                <li className="flex items-start gap-3">
                  <div className="w-2 h-2 bg-emerald-500 rounded-full mt-2 flex-shrink-0" />
                  <span>Department will review within 24 hours based on AI priority assessment</span>
                </li>
                <li className="flex items-start gap-3">
                  <div className="w-2 h-2 bg-emerald-500 rounded-full mt-2 flex-shrink-0" />
                  <span>You'll receive updates via SMS/Email if provided</span>
                </li>
                <li className="flex items-start gap-3">
                  <div className="w-2 h-2 bg-emerald-500 rounded-full mt-2 flex-shrink-0" />
                  <span>Contact department directly if no response in {result.estimated_resolution}</span>
                </li>
              </ul>
            </div>
          </CardContent>
        </Card>

        {/* Action Buttons */}
        <div className="space-y-4">
          {/* Dashboard Button */}
          <Link href="/dashboard" className="block">
            <Button
              variant="outline"
              className="w-full bg-white border-gray-200 text-gray-700 hover:bg-gray-50 font-semibold py-4 rounded-2xl h-14"
            >
              <User className="w-5 h-5 mr-2" />
              View My Dashboard
            </Button>
          </Link>

          {/* Download Report Button */}
          <Button
            onClick={downloadReport}
            disabled={downloadingReport}
            className="w-full bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold py-4 rounded-2xl shadow-lg h-14"
          >
            {downloadingReport ? (
              <div className="flex items-center gap-3">
                <div className="w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin" />
                Generating Report...
              </div>
            ) : (
              <div className="flex items-center gap-3">
                <Download className="w-5 h-5" />
                Download AI Analysis Report
              </div>
            )}
          </Button>

          <Link href="/complaint" className="block">
            <Button
              variant="outline"
              className="w-full bg-white border-gray-200 text-gray-700 hover:bg-gray-50 font-semibold py-4 rounded-2xl h-14"
            >
              Submit Another Complaint
            </Button>
          </Link>

          <Link href="/" className="block">
            <Button className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-semibold py-4 rounded-2xl shadow-lg h-14">
              <Home className="w-5 h-5 mr-2" />
              Back to Home
            </Button>
          </Link>
        </div>

        {/* Footer note */}
        <div className="text-center mt-6 p-4 bg-white rounded-2xl shadow-sm border border-gray-200">
          <p className="text-xs text-gray-600">
            🤖 Powered by AI analysis. Download the report as evidence. Contact the department if no response within the
            expected timeframe.
          </p>
        </div>
      </div>
    </div>
  )
}
